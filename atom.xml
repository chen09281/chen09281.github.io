<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>金锦鲤X&#39;blog</title>
  
  <subtitle>记录生活美好，记录笔记</subtitle>
  <link href="http://myfake.xyz/atom.xml" rel="self"/>
  
  <link href="http://myfake.xyz/"/>
  <updated>2022-09-12T13:12:20.728Z</updated>
  <id>http://myfake.xyz/</id>
  
  <author>
    <name>金锦鲤</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot自动装配原理</title>
    <link href="http://myfake.xyz/posts/d4aa8d83.html"/>
    <id>http://myfake.xyz/posts/d4aa8d83.html</id>
    <published>2022-09-12T15:11:37.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自动配置:</p></blockquote><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><ul><li>spring-boot-dependencies: 核心依赖在父工程中</li><li>我们在写或者引入一些SpringBoot依赖的时候，不需要指定版本，因为有这些版本的仓库</li></ul><h3 id="启动器"><a href="#启动器" class="headerlink" title="启动器"></a>启动器</h3><ul><li><pre><code class="xml">&lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;&lt;/dependency&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 启动器：说白了就是springboot的启动场景</span><br><span class="line">+ 比如spring-boot-starter-web，他就会帮我们自动导入web环境所有的依赖</span><br><span class="line">+ springboot会将所有功能场景，都变成一个个的启动器</span><br><span class="line">+ 我们要使用什么功能就只需要找到对应的启动器就可以了 `start`</span><br><span class="line"></span><br><span class="line">### 主程序</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">// @SpringBootApplication: 标注这个类是一个springboot的应用</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class Springboot01HelloworldApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 将springboot应用启动</span><br><span class="line">        SpringApplication.run(Springboot01HelloworldApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>注解</p><ul><li><p>&#96;&#96;&#96;java<br>@SpringBootConfiguration: SpringBoot的配置<br>@Configuration: spring配置类<br>@Component: 说明这也是一个spring的组件<br>@EnableAutoConfiguration: 自动配置<br>@AutoConfigurationPackage: 自动配置包<br>    @Import(AutoConfigurationPackages.Registrar.clss): 自动配置<code>包注册</code><br>@Import(AutoConfigurationImportSelector.clss): 自动配置导入选择<br>&#x2F;&#x2F; 获取所有的配置<br>List<String> configurations &#x3D; this.getCandidateConfigurations(annotationMetadata, attributes);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">获取候选的配置</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">protected List&lt;String&gt; getCandidateConfigurations(AnnotationMetadata metadata, AnnotationAttributes attributes) &#123;</span><br><span class="line">        List&lt;String&gt; configurations = new ArrayList(SpringFactoriesLoader.loadFactoryNames(this.getSpringFactoriesLoaderFactoryClass(), this.getBeanClassLoader()));</span><br><span class="line">        ImportCandidates.load(AutoConfiguration.class, this.getBeanClassLoader()).forEach(configurations::add);</span><br><span class="line">        Assert.notEmpty(configurations, &quot;No auto configuration classes found in META-INF/spring.factories nor in META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports. If you are using a custom packaging, make sure that file is correct.&quot;);</span><br><span class="line">        return configurations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>META-INF&#x2F;spring.factories: 自动配置的核心文件</p><p><img src="/posts/d4aa8d83/image-20220912181708078-16629778321441-16629778379903.png" alt="文件位置"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">所有资源加载到配置类中</span><br></pre></td></tr></table></figure><p><img src="/posts/d4aa8d83/%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE.png" alt="自动配置"></p><p>结论:springboot所有的自动配置都是启动的时候扫描并加载:<code>spring.factories</code>所有的自动配置类都在这里，但是不一定生效，要判断条件是否成立，只要导入了对应的start，就有对应的启动器了，有了启动器自动装配就会生效，然后就配置成功！</p><ol><li>springboot在启动的时候，从类路径下&#x2F;META-INF&#x2F;spring.factories获取指定的值；</li><li>将这些自动配置的类导入容器，自动配置类就会生效，帮我们进行自动配置</li><li>以前我们需要手动配置的东西，现在springboot帮我们做了</li><li>整个javaEE，解决方案和自动配置的东西都在spring-boot-autoconfigure下</li><li>他会把所有需要导入的组件，以类名的方式返回，这些组件就会被添加到容器</li><li>容器中也会存在非常多的xxx.autoconfiguration的文件，就是这些类给容器导入了这个场景需要的所有组件，并自动配置，@Configuration,JavaConfig!</li><li>有了自动配置类，免去了我们手动编写配置文件的工作</li></ol></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;自动配置:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;pom-xml&quot;&gt;&lt;a href=&quot;#pom-xml&quot; class=&quot;headerlink&quot; title=&quot;pom.xml&quot;&gt;&lt;/a&gt;pom.xml&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;spri</summary>
      
    
    
    
    
    <category term="Java" scheme="http://myfake.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://myfake.xyz/posts/4a17b156.html"/>
    <id>http://myfake.xyz/posts/4a17b156.html</id>
    <published>2022-09-12T13:12:20.728Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>第一个SpringBoot程序</title>
    <link href="http://myfake.xyz/posts/6d7bc0fa.html"/>
    <id>http://myfake.xyz/posts/6d7bc0fa.html</id>
    <published>2022-09-12T00:20:00.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>环境</p></blockquote><ul><li>jdk17</li><li>maven</li><li>springboot:最新版</li><li>idea</li></ul><blockquote><p>创建</p></blockquote><p>官方提供了一个快速生成的网站！IDEA集成了这个网站。</p><ul><li>可以在官网直接下载后，导入idea开发</li><li>可以使用idea创建一个springboot项目(一般开发直接在IDEA中创建)</li></ul><h3 id="官网创建："><a href="#官网创建：" class="headerlink" title="官网创建："></a>官网创建：</h3><p><img src="/posts/6d7bc0fa/image-20220912002723028.png" alt="使用官网创建spring boot项目"></p><p>点击ADD DEPENDENCIES…搜索web后勾选，就导入了web包了。</p><p>点击GNERATE之后会下载一个压缩包，里面就是你的工程了。</p><p><img src="/posts/6d7bc0fa/%E5%B7%A5%E7%A8%8B%E6%96%87%E4%BB%B6.png" alt="导入工程后"></p><p>打开后和普通的工程文件一样,运行com.xxx.xxx.xxxApplication即可运行成功，在com.xxx.xxx包下创建controller包，创建HelloWorld类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chen.helloworld.contrller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动装配</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接口：http://localhost:8080/hello</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 调用业务，接收前端的参数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello,World&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接运行xxxApplication在浏览器中输入localhost:8080&#x2F;hello即可成功访问</p><p><img src="/posts/6d7bc0fa/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A2%84%E8%A7%88.png" alt="浏览器"></p><h3 id="使用IDEA创建"><a href="#使用IDEA创建" class="headerlink" title="使用IDEA创建"></a>使用IDEA创建</h3><p>在idea中新建项目，选择Spring initializr</p><p><img src="/posts/6d7bc0fa/idea.png" alt="idea"></p><blockquote><p>小彩蛋</p></blockquote><p>更改端口：</p><p>在resources下的application配置server.port&#x3D;端口号</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改项目的端口号</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure><p>自定义启动banner</p><p>在resources下新建一个名为banner的txt文件如果banner.txt图标隔壁有个圈就证明已经关联起来了。</p><p><img src="/posts/6d7bc0fa/banner%E6%96%87%E6%9C%AC.png" alt="成功的图标"></p><p>这时候我们运行就已经成功了</p><p><img src="/posts/6d7bc0fa/banner.png" alt="启动"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;jdk17&lt;/li&gt;
&lt;li&gt;maven&lt;/li&gt;
&lt;li&gt;springboot:最新版&lt;/li&gt;
&lt;li&gt;idea&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;创建&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Java" scheme="http://myfake.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>初识springboot</title>
    <link href="http://myfake.xyz/posts/22044772.html"/>
    <id>http://myfake.xyz/posts/22044772.html</id>
    <published>2022-09-11T21:07:47.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 什么是spring</p></blockquote><p>Spring是一个开源框架，2003年兴起的一个轻量级Java开发框架，作者: Rod Johnson。</p><p><strong>Spring是为了解决企业级应用开发的复杂性而创建的，简化开发</strong></p><blockquote><p>Spring是如何简化开发的</p></blockquote><p>为了降低Java开发的复杂性，Spring采用了以下4中关键策略:</p><ol><li>基于POJO的轻量级和最小入侵性编程；</li><li>通过IOC，依赖注入(DI)和面向接口实现松耦合；</li><li>基于切面(AOP)和惯例进行声明式编程；</li><li>通过切面模板减少样式代码；</li></ol><blockquote><p>什么是Spring Boot</p></blockquote><p>最开始我们接触JavaWeb开发一个web应用，使用的是Servlet+Tomcat，servlet要经历很多的步骤，因为所有东西几乎都是原生的，WEB.xml中要配置大量的东西；后来就用了Spring MVC到现在的Spring Boot。SpringBoot其实也是一个javaweb的开发框架，和SpringMVC类似，对比其他javaweb的好处，官方说明是简化开发，约定大于配置，能迅速的开发web应用 ，几行代码就可以开发一个http接口。</p><p>所有的技术框架的发展似乎都遵循了一条规律：从一个复杂应用场景衍生一种规范框架，人们只需要进行各种配置而不需要自己去实现它，这时候强大的配置功能成了优点；发展到一定程度之后，人们根据实际生产应用情况，选取其中使用功能和设计精华，重构出了一些轻量级的框架；之后为了提高开发效率，嫌弃原先的各类配置过于麻烦，于是开始提倡”约定大于配置”，进而衍生出一些一站式的解决方法。</p><p>这就是Java企业级应用-&gt;J2EE-&gt;spring-&gt;springboot的过程。</p><p>Spring的不断发展，涉及的领域越来越多，项目整合开发需要配置各种各样的文件，慢慢变得不是那么简单易用，违背了最初的设计理念，甚至可以说是配置地狱。Spring Boot正是在这样的一个背景下被抽象出来的开发框架，目的为了让大家更容易的使用spring、更容易的集成各种各样的中间件、开源软件；</p><p>Spring Boot基于spring开发。Spring Boot本身并不提供Spring框架的核心特性以及扩展功能，只是用于快速、迅捷地开发新一代基于Spring框架的应用程序。Spring Boot以<strong>约定大于配置的核心思想</strong>，默认帮我们进行了很多设置，多数Spring Boot应用只需要很少的Spring配置。同时他集成了大量常用的第三方库配置(例如 Redis、MongoDB、Jpa、RabbitMQ、Quartz等等)，Spring Boot应用中这些第三方库几乎可以零配置的开箱即用。</p><p>简单的说Spring Boot其实并不是新的框架，他默认配置了很多框架的使用方式，就像maven整合了所有的jar包，Spring Boot整合了所有的框架。</p><p><strong>Spring Boot的主要优点</strong></p><ul><li>为所有Spring开发者更快的入门</li><li><strong>开箱即用</strong>，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化Web项目</li><li>没有冗余代码生成和XML配置的要求</li></ul><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><blockquote><p>什么是微服务？</p></blockquote><p>微服务是一种架构风格，他要求我们在开发一个应用的时候，这个应用必须构成一系列小服务的组合；可以通过http的方式进行互通。</p><blockquote><p>单体应用框架</p></blockquote><p>所谓单体应用框架(all in one)是指，我们将一个应用中的所有应用服务都封装在一个应用中。</p><p>无论是ERP、CRM或是其他什么系统，你都把数据库访问，web访问，等等各个功能放到一个war包内。</p><ul><li>这样做的好处是，已于开发和测试；也十分方便部署；当需要扩展时，只需将war复制多份，然后放到多个服务器上，再做个负载均衡就可以了。</li><li>单体应用架构的缺点是，哪怕我要修改一个非常小的地方，我都需要停掉整个服务器，重新打包、部署这个应用war包。特别是对于一个大型应用，我们不可能把所有内容都放在一个应用里，我们如何维护、如何分工合作都是问题。</li></ul><blockquote><p>微服务架构</p></blockquote><p>all in one 的架构方式，我们把所有功能单元放在一个应用里面。然后吧整个应用部署到服务器上。如果负载能力不行，我们将正二哥应用进行水平复制，进行扩展，然后再负载均衡。</p><p>所谓微服务架构，就是打破之前all in one 的架构方式，把每个功能元素独立出来。把独立出来的功能元素的动态组合，需要的功能元素才去拿来组合，需要多一些时可以整合多个功能元素。所以微服务架构是对功能元素进行复制，而没有对整个应用进行复制。</p><p>这样做的好处是：</p><ol><li>节省了调度资源</li><li>每个共呢个元素服务都是一个可替换的、可独立升级的软件代码。</li></ol><blockquote><p>如何构建微服务</p></blockquote><p>一个大型系统的微服务架构，就像一个复杂交织的神经网络，每一个神经元就是一个功能元素，他们各自完成自己的功能，然后通过http相互请求调用。比如一个电商系统，查缓存、连数据库、浏览页面、结账、支付等服务都是一个个独立的功能服务，都为微化了，他们作为一个个微服务共同构建了一个庞大的系统。如果修改其中的一个功能，只需要更新升级其中一个功能服务单元即可。</p><p>Spring为我们带来了构建大型分布式微服务的全套、全程产品：</p><ul><li>构建一个个功能独立的微服务应用的那元，可以使用spring boot，可以帮我们快速构建一个应用；</li><li>大型分布式网络服务的调用，这部分由spring cloud来完成，实现分布式；</li><li>在分布式中间，进行流式数据计算、批处理，我们有spring cloud data flow。</li><li>spring 为我们想清楚了整个从开始构建应用到大型分布式应用全流程方案。</li></ul><blockquote><p>微服务论文</p></blockquote><p>原文(Martin Fowler)：</p><p><a href="https://martinfowler.com/articles/microservices.html">https://martinfowler.com/articles/microservices.html</a></p><p>翻译(船长&amp;CAP)：</p><p><a href="https://www.cnblogs.com/liuning8023/p/4493156.html">https://www.cnblogs.com/liuning8023/p/4493156.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; 什么是spring&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring是一个开源框架，2003年兴起的一个轻量级Java开发框架，作者: Rod Johnson。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spring是为了解决企业级应用开发的复杂性而创</summary>
      
    
    
    
    
    <category term="Java" scheme="http://myfake.xyz/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>外键</title>
    <link href="http://myfake.xyz/posts/68b78662.html"/>
    <id>http://myfake.xyz/posts/68b78662.html</id>
    <published>2022-09-11T12:49:41.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="外键（了解即可）"><a href="#外键（了解即可）" class="headerlink" title="外键（了解即可）"></a>外键（了解即可）</h2><blockquote><p>方式1、在创建表的时候，增加约束(麻烦，比较复杂)</p></blockquote><p>创建一个年级表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>创建一个学生表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学生表的 gradeid 字段 要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键key</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束(执行引用) references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;匿名&#x27;</span>) COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;123456&#x27;</span>) COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;女&#x27;</span>) COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(`id`),</span><br><span class="line">KEY `FK_gradeid` (`gradeid`),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p><img src="/posts%5C68b78662%5C%E5%A4%96%E9%94%AE.png" alt="外键"></p><p>删除有外键关系的表的时候，必须要先删除引用别人的表(从表),再删除被引用的表(主表)</p><blockquote><p>方式2、创建表成功后添加外键约束</p></blockquote><p>创建student表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;匿名&#x27;</span>) COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;123456&#x27;</span>) COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span>(<span class="string">&#x27;女&#x27;</span>) COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>添加外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (`gradeid`);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALTER TABLE 表 ADD CONSISTENT 约束名 FOREIGN KEY (作为外键的列) REFERENCES 那个表 (那个字段)</span></span><br></pre></td></tr></table></figure><p><img src="/posts%5C68b78662%5C%E5%A4%96%E9%94%AE.png" alt="外键"></p><p>以上的操作都是物理外键，数据库级别的外键，不建议使用。(避免数据库过多造成困扰)</p><p>&#x3D;&#x3D;最佳实践&#x3D;&#x3D;</p><ul><li>数据库就是单纯的表，只用来存数据，只有行(数据)和列(字段)</li><li>我们想使用多张表的数据，想使用外键(程序去实践)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;外键（了解即可）&quot;&gt;&lt;a href=&quot;#外键（了解即可）&quot; class=&quot;headerlink&quot; title=&quot;外键（了解即可）&quot;&gt;&lt;/a&gt;外键（了解即可）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;方式1、在创建表的时候，增加约束(麻烦，比较复杂)&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    
    <category term="mysql" scheme="http://myfake.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>数据表的类型</title>
    <link href="http://myfake.xyz/posts/a9d62b65.html"/>
    <id>http://myfake.xyz/posts/a9d62b65.html</id>
    <published>2022-09-10T15:21:06.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySql中INNODB和MYISAM引擎的区别"><a href="#MySql中INNODB和MYISAM引擎的区别" class="headerlink" title="MySql中INNODB和MYISAM引擎的区别"></a>MySql中INNODB和MYISAM引擎的区别</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 关于数据库引擎</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">INNODB 默认使用</span></span><br><span class="line"><span class="comment">MYISAM 早些年使用的</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th align="left">MYISAM</th><th align="left">INNODB</th></tr></thead><tbody><tr><td>事务支持</td><td align="left">不支持</td><td align="left">支持</td></tr><tr><td>数据行锁定</td><td align="left">不支持 (表锁)</td><td align="left">支持</td></tr><tr><td>外键约束</td><td align="left">不持支</td><td align="left">支持</td></tr><tr><td>全文索引</td><td align="left">支持</td><td align="left">不支持</td></tr><tr><td>表空间的大小</td><td align="left">较小</td><td align="left">较大，约为MYISAM的两倍</td></tr></tbody></table><p>常规的使用操作:</p><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，支持事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间存在的位置</p></blockquote><p>所有的数据库文件都存在data目录下，一个文件夹对应一个数据库</p><p>本质还是文件的存储！</p><p>MySql引擎在物理文件上的区别</p><ul><li>INNODB 在数据库表中只有一个*.frm文件，以及上级目录下的ibdata文件</li><li>MYISAM 对应文件<ul><li>*.frm -表结构的定义文件</li><li>*.myd 数据文件(data)</li><li>*.MYI 索引文件(index)</li></ul></li></ul><blockquote><p>设置数据库表的字符编码</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>不设置的话，会是，mysql默认的字符集编码（不支持中文）</p><p>MySql默认编码是Latin1,不支持中文</p><p>在my.ini中配置默认的编码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">character</span><span class="operator">-</span><span class="keyword">set</span><span class="operator">-</span>server<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MySql中INNODB和MYISAM引擎的区别&quot;&gt;&lt;a href=&quot;#MySql中INNODB和MYISAM引擎的区别&quot; class=&quot;headerlink&quot; title=&quot;MySql中INNODB和MYISAM引擎的区别&quot;&gt;&lt;/a&gt;MySql中INNODB和M</summary>
      
    
    
    
    
    <category term="mysql" scheme="http://myfake.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>javase复习</title>
    <link href="http://myfake.xyz/posts/f2d38d13.html"/>
    <id>http://myfake.xyz/posts/f2d38d13.html</id>
    <published>2022-09-09T21:41:28.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="笔试题-50分"><a href="#笔试题-50分" class="headerlink" title="笔试题(50分)"></a>笔试题(50分)</h2><p>1.用一个生活案例，描述出面向对象这个概念！(理解)</p><psw>（比如设计一个角色）创建了一个角色名为教师，教师的性别，年龄，资历，他的技能是传授经验。后来我又创建了一个角色名为学生，学生的性别，年龄，资历。</psw><p>2.native,volatile关键字的作用！各举一个java中的例子!</p><psw>native指的是底层java不能读取的代码，里面大概率是c语言编写的。Volatile变量不会被缓存在寄存器或者对其他处理器不可见的地方，因此在读取volatile类型的变量时总会返回新写入的值，volatile有两个重要的作用，首先是保证变量的可见性，当一个线程修改了变量的值那么新的值对于其他线程是可以立即可见的，其次是禁止指令重排序，volatile是比Synchronized更轻量级的同步锁，在访问volatile变量时不会执行加锁操作，因此也就不会执行线程阻塞。volatile适合使用在一个变量被多个线程共享县城直接给这个变量赋值的场景。</psw><p>3.写出结果，分析原因，代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchTest</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="type">String</span> <span class="variable">param</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">switch</span>(param)&#123;</span><br><span class="line"></span><br><span class="line">​      <span class="keyword">case</span> <span class="string">&quot;null&quot;</span>:</span><br><span class="line"></span><br><span class="line">​        System.out.println(<span class="string">&quot;null&quot;</span>);</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">​      <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">​        System.out.println(<span class="string">&quot;default&quot;</span>);</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行的结果是什么？为什么会出现这种情况？</p><psw>会报空指针异常,报错的内容里面有hashCode字样，显然原因是需要比较hashCode是否相等，而一方为null;就产生了空指针异常，null是无法获取其hashCode的</psw><p>4.线程的五种状态，以及线程常用的方法</p><psw>1.新建状态 2.就绪状态 3.运行状态 4.阻塞状态 5.死亡状态 常用的方法有：sleep，join，yield，isLive,start,setPriority,interrupt(),stop(不建议使用)</psw><p>5.通过反射如何创建对象，执行对象的方法，修改对象的字段，如果是私有属性该怎么办？</p><psw>首先要获得class对象，可以使用Class.forName()来获取对象，然后通过获取到的对象使用newInstance()方法创建对象，或者使用构造器，方法可以使用getMethod来获取，若是属性为private可以使用setAccessible(true)来关闭安全检测。</psw><h2 id="代码题：多线程聊天室（50分）"><a href="#代码题：多线程聊天室（50分）" class="headerlink" title="代码题：多线程聊天室（50分）"></a>代码题：多线程聊天室（50分）</h2><p>1.GUI+10</p><p>2.多线程+20</p><p>3.集合+10</p><p>4.可阅读性+5</p><p>5.网络编程+5</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;笔试题-50分&quot;&gt;&lt;a href=&quot;#笔试题-50分&quot; class=&quot;headerlink&quot; title=&quot;笔试题(50分)&quot;&gt;&lt;/a&gt;笔试题(50分)&lt;/h2&gt;&lt;p&gt;1.用一个生活案例，描述出面向对象这个概念！(理解)&lt;/p&gt;
&lt;psw&gt;（比如设计一个角色）创建</summary>
      
    
    
    
    
    <category term="JavaSE" scheme="http://myfake.xyz/tags/JavaSE/"/>
    
  </entry>
  
  <entry>
    <title>测试博客</title>
    <link href="http://myfake.xyz/posts/d9407122.html"/>
    <id>http://myfake.xyz/posts/d9407122.html</id>
    <published>2022-09-09T19:24:45.000Z</published>
    <updated>2022-09-12T13:12:20.728Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一个测试页面"><a href="#这是一个测试页面" class="headerlink" title="这是一个测试页面"></a>这是一个测试页面</h1><div class="tip home"><p>这是内容</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一个测试页面&quot;&gt;&lt;a href=&quot;#这是一个测试页面&quot; class=&quot;headerlink&quot; title=&quot;这是一个测试页面&quot;&gt;&lt;/a&gt;这是一个测试页面&lt;/h1&gt;&lt;div class=&quot;tip home&quot;&gt;&lt;p&gt;这是内容&lt;/p&gt;
&lt;/div&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
